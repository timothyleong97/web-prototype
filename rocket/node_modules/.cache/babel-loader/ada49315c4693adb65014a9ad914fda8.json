{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\web-prototype\\\\frontend\\\\rocket\\\\src\\\\components\\\\Tiles\\\\CatalogueItem.js\";\nimport React from 'react';\nimport { Header, Segment } from 'semantic-ui-react';\nconst square = {\n  width: 300,\n  height: 150,\n  backgroundColor: '#bfbfbf',\n  borderRadius: 0,\n  verticalAlign: 'middle',\n  paddingTop: 55,\n  color: 'black'\n};\n\nclass CatalogueItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setSpans = () => {\n      const height = this.imageRef.current.clientHeight;\n      const spans = Math.ceil(height / 10);\n      this.setState({\n        spans\n      });\n    };\n\n    this.state = {\n      spans: 0\n    };\n    this.imageRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.imageRef.current.addEventListener('load', this.setSpans);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        gridRowEnd: `span ${this.state.spans}`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      style: square,\n      ref: this.imageRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, props.text)));\n  }\n\n}\n\nexport default CatalogueItem;","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/web-prototype/frontend/rocket/src/components/Tiles/CatalogueItem.js"],"names":["React","Header","Segment","square","width","height","backgroundColor","borderRadius","verticalAlign","paddingTop","color","CatalogueItem","Component","constructor","props","setSpans","imageRef","current","clientHeight","spans","Math","ceil","setState","state","createRef","componentDidMount","addEventListener","render","gridRowEnd","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,mBAAhC;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,KAAK,EAAE,GADI;AAEXC,EAAAA,MAAM,EAAE,GAFG;AAGXC,EAAAA,eAAe,EAAE,SAHN;AAIXC,EAAAA,YAAY,EAAC,CAJF;AAKXC,EAAAA,aAAa,EAAC,QALH;AAMXC,EAAAA,UAAU,EAAE,EAND;AAOXC,EAAAA,KAAK,EAAE;AAPI,CAAf;;AAUA,MAAMC,aAAN,SAA4BX,KAAK,CAACY,SAAlC,CAA4C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAYnBC,QAZmB,GAYR,MAAM;AACb,YAAMV,MAAM,GAAG,KAAKW,QAAL,CAAcC,OAAd,CAAsBC,YAArC;AAEA,YAAMC,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUhB,MAAM,GAAG,EAAnB,CAAd;AAEA,WAAKiB,QAAL,CAAc;AAAEH,QAAAA;AAAF,OAAd;AACH,KAlBkB;;AAGf,SAAKI,KAAL,GAAa;AAAEJ,MAAAA,KAAK,EAAE;AAAT,KAAb;AAEA,SAAKH,QAAL,GAAgBhB,KAAK,CAACwB,SAAN,EAAhB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKT,QAAL,CAAcC,OAAd,CAAsBS,gBAAtB,CAAuC,MAAvC,EAA+C,KAAKX,QAApD;AACH;;AAUDY,EAAAA,MAAM,GAAG;AAEL,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAG,QAAO,KAAKL,KAAL,CAAWJ,KAAM;AAAvC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAEhB,MAAhB;AAAwB,MAAA,GAAG,EAAE,KAAKa,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAS,MAAA,EAAE,EAAC,IAAZ;AAAiB,MAAA,SAAS,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,KAAK,CAACe,IADX,CADJ,CADF,CADF;AASD;;AAhCqC;;AAuC5C,eAAelB,aAAf","sourcesContent":["import React from 'react'\r\nimport { Header, Segment } from 'semantic-ui-react'\r\n\r\nconst square = { \r\n    width: 300, \r\n    height: 150, \r\n    backgroundColor: '#bfbfbf', \r\n    borderRadius:0, \r\n    verticalAlign:'middle',\r\n    paddingTop: 55,\r\n    color: 'black'\r\n}\r\n\r\nclass CatalogueItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = { spans: 0 };\r\n    \r\n        this.imageRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.imageRef.current.addEventListener('load', this.setSpans);\r\n    }\r\n    \r\n    setSpans = () => {\r\n        const height = this.imageRef.current.clientHeight;\r\n    \r\n        const spans = Math.ceil(height / 10);\r\n    \r\n        this.setState({ spans });\r\n    };\r\n    \r\n    render() {\r\n        \r\n        return (\r\n          <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\r\n            <Segment style={square} ref={this.imageRef}>\r\n                <Header  as='h2' textAlign='center'>\r\n                    {props.text}\r\n                </Header>\r\n            </Segment>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\nexport default CatalogueItem"]},"metadata":{},"sourceType":"module"}